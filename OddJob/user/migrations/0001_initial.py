# Generated by Django 4.2.11 on 2025-05-06 12:01

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=120, verbose_name='用户名')),
                ('phone', models.CharField(max_length=20, unique=True, verbose_name='手机号')),
                ('password', models.CharField(max_length=100, verbose_name='密码')),
                ('avatar', models.ImageField(null=True, upload_to='avatars/', verbose_name='头像')),
                ('role', models.SmallIntegerField(choices=[(0, '普通用户'), (1, '零工人员'), (2, '企业管理员'), (3, '系统管理员')], default=0, verbose_name='用户角色')),
                ('id_card', models.CharField(max_length=18, unique=True, verbose_name='身份证号')),
                ('skill_tags', models.CharField(blank=True, max_length=200, verbose_name='技能标签')),
                ('groups', models.ManyToManyField(blank=True, related_name='userprofile_groups', to='auth.group', verbose_name='用户组')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='userprofile_permissions', to='auth.permission', verbose_name='用户权限')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserJobIntention',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_type', models.CharField(max_length=50, verbose_name='期望职位类型')),
                ('expected_salary', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='期望日薪')),
                ('work_area', models.CharField(max_length=100, verbose_name='期望工作区域')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.userprofile', verbose_name='关联用户')),
            ],
        ),
    ]
